build this model using Keras' Sequential class: define the network as a sequence of layers
use a single Dense layer to build this simple network

The loss function measures the guessed answers against the known correct answers and measures how well or how badly it did
The optimizer function to make another guess

# Build a simple Sequential model
model = tf.keras.Sequential([

    # Define the input shape
    tf.keras.Input(shape=(1,)),

    # Add a Dense layer
    tf.keras.layers.Dense(units=1)
    ])
# Compile the model
model.compile(optimizer='sgd', loss='mean_squared_error')
# Train the model
model.fit(xs, ys, epochs=500)

model.predict(np.array([10.0]), verbose=0).item():.5f