Cơ sở dữ liệu (Database) là một tập hợp dữ liệu hoặc thông tin có tổ chức để có thể dễ dàng truy cập, cập nhật hoặc thao tác
Hệ quản trị cơ sở dữ liệu (Database management system - DBMS) như một phần mềm để giúp quản lý cơ sở dữ liệu. DBMS sẽ bao gồm các chức năng để xác định, thao tác cũng như truy xuất và quản lý dữ liệu, đồng thời giúp xác định những quy tắc nhằm xác thực cũng như thao tác với những dữ liệu được lưu trữ trong DBMS
ngôn ngữ truy vấn dữ liệu (Structured Query Language - SQL)
Có hai DBMS rất phổ biến là MySQL và SQL Server
	MySQL được phát hành từ giữa thập niên 90s (sau đó bị thâu tóm bởi Oracle), MySQL ban đầu là một DBMS mã nguồn mở và cũng vẫn mở cho tới tận bây giờ
	Microsoft phát triển SQL Server từ giữa thập niên 80s, với mục tiêu hướng đến là SQL Server sẽ cung cấp giải pháp đáng tin cậy và có thể mở rộng, nó là một nền tảng được chọn cho những phần mềm doanh nghiệp cần mở rộng lớn theo thời gian.
	SQL Server hoạt động tốt trong hệ sinh thái của Microsoft nhưng chưa được hỗ trợ tốt trong Linux, trong khi đó MySQL hoạt động tốt ở cả Windown và Linux.
	MySQL là một hệ quản trị cơ sở dữ liệu được sử dụng để lưu trữ, quản lý dữ liệu có cấu trúc trong khi đó SQL (Structured Query Language - SQL) là một ngôn ngữ truy vấn dữ liệu được sử dụng bên trong MySQL
ngôn ngữ truy vấn dữ liệu (Structured Query Language - SQL)
ngôn ngữ định nghĩa dữ liệu (Data Definition Language - DDL) là các lệnh để định nghĩa cấu trúc lưu trữ dữ liệu, sử dụng các câu lệnh này để thao tác trên Database (cơ sở dữ liệu), Table (bảng), các trường (cột), gồm CREATE, DROP, TRUNCATE, ALTER, ...
ngôn ngữ thao tác dữ liệu (Data Manipulation Language - DML) là các lệnh để thao tác với dữ liệu trên một bảng, gồm DELETE, INSERT, UPDATE, SELECT, ...

mysql-ctl cli (truy cập vào chương trình dòng lệnh mysql)

show databases; (hiển thị các cơ sở dữ liệu hiện có);	
CREATE DATABASE soap_store; (tạo mới database tên là soap_store);
USE dog_walking_app;

	CREATE TABLE cats3
	  (
	    name VARCHAR(20) DEFAULT 'no name provided',
	    age INT auto_increment DEFAULT 99
	  );
	show tables;
	desc cats3;
	INSERT INTO table_name(field1, field2 …)  VALUES (values1, values 2…);
	DROP TABLE table_name; (Xoá một bảng hiện có)
	Lệnh DELETE xóa dữ liệu, giữ nguyên cấu trúc bảng; chỉ xóa các hàng từ bảng dựa trên điều kiện đã được định nghĩa bởi mệnh đề WHERE hoặc xóa tất cả các hàng từ bảng nếu điều kiện này không được xác định; không giải phóng bộ nhớ
	Lệnh TRUNCATE xóa dữ liệu, giữ nguyên cấu trúc bảng; xóa tất cả các hàng từ bảng và giải phóng bộ nhớ chứa bảng đó

select * from cats3;
select name as gskohaoi from cats3 where age = 7834634;
*******************************************************************
SELECT
CASE
    WHEN Category  = "Danh mục A" THEN "A"
    WHEN Category  = "Danh mục B" THEN "B"
    ELSE "OTHER"
END  as type
FROM Product;
*******************************************************************
SELECT DISTINCT name FROM STUDENT; lấy tất cả giá trị không trùng nhau ở cột name trong bảng STUDENT
SELECT * FROM STUDENT ORDER BY name ASC; lấy các hàng từ bảng STUDENT được sắp xếp tăng dần theo name (ASC là mặc định)
SELECT * FROM STUDENT ORDER BY name DESC; lấy các hàng từ bảng STUDENT được sắp xếp giảm dần theo name.
SELECT * FROM STUDENT LIMIT 5 OFFSET 20; lấy 5 hàng đầu tiên bắt đầu từ hàng 21
*******************************************************************
SELECT CLASS, AVG(point) as tong_diem FROM STUDENT GROUP BY class;
Một số Aggregate_Function hay sử dụng như sau:
	COUNT: Hàm đếm số lượng hàng
	MIN: Hàm tìm giá trị nhỏ nhất
	MAX: Hàm tìm giá trị lớn nhất
	SUM: Hàm tính tổng
	AVG: Hàm tính giá trị trung bình
*******************************************************************
SELECT title, pages FROM books WHERE pages = (SELECT Min(pages) FROM books);
SELECT DATABASE(); (In ra database đang được sử dụng)
update cats set age = 12 where breed = 'Maine Coon';
DELETE FROM cats WHERE age=4;
DROP DATABASE soap_store; (Xoá một database hiện có)

INSERT INTO bang_2 (cot_1, cot_2, cot_3, ...) SELECT cot_1, cot_2, cot_3 FROM bang_1;  # sao chép cột từ bảng cũ sang bảng mới
SELECT * INTO bang_moi FROM bang_cu;                                                   # sao chép dữ liệu từ bảng cũ sang bảng mới

một số toán tử logic:
	LIKE: Để khớp với chuỗi mong muốn 
		SELECT * FROM STUDENT WHERE name LIKE "Nguyễn%"
			"%" đại diện cho không hoặc nhiều ký tự
			"_" đại diện cho một ký tự.
	and
	or
	in
	not in
	between
		SELECT * FROM STUDNT WHERE age BETWEEN 30 and 50

Một số kiểu dữ liệu:
	int: Kiểu số nguyên, mỗi một số sẽ có dung lượng là 4 byte
	FLOAT(size,d): kiểu dữ liệu số thực, mỗi một số sẽ có dung lượng là 4 byte.
		Số lượng chữ số tối đa có thể được chỉ định trong tham số size.
		Số chữ số tối đa ở bên phải dấu thập phân được chỉ định trong tham số d. 
	DOUBLE(size,d): kiểu dữ liệu số thực, mỗi một số sẽ có dung lượng là 8 byte.
		Số lượng chữ số tối đa có thể được chỉ định trong tham số size.
		Số chữ số tối đa ở bên phải dấu thập phân được chỉ định trong tham số d.
	char: Kiểu chuỗi nhưng sẽ có độ dài cố định
		nếu độ dài chuỗi vượt quá giới hạn thì MySQL sẽ báo lỗi "Data too long".
	varchar: Kiểu chuỗi nhưng sẽ có độ dài động
		nếu độ dài chuỗi vượt quá giới hạn thì giá trị này sẽ được chuyển thành loại TEXT.
		làm việc với chuỗi:
			CONCAT(x, y, z, ...)
				CONCAT_WS(chuoi_ngan_cach, x, y, z)
			SUBSTRING(x, vi_tri_bat_dau, so_ky_tu_muon_cat)
			REPLACE(x, chuoi_muon_thay_the, chuoi_thay_the)
			REPLACE(x, chuoi_muon_thay_the, chuoi_thay_the)
			REVERSE(x)
			CHAR_LENGTH(x)
			UPPER(x)
			LOWER(x)
	DECIMAL(size,d): Một số thực được lưu trữ dưới dạng một chuỗi, cho phép một dấu thập phân cố định
		Số lượng chữ số tối đa có thể được chỉ định trong tham số size
		Số chữ số tối đa ở bên phải dấu thập phân được chỉ định trong tham số d.
	date: Kiểu dữ liệu ngày tháng có dạng YYYY-MM-DD
	datetime: Kiểu dữ liệu thời gian có dạng YYYY-MM-DD HH:MM:SS
	timestamp: Kiểu dữ liệu thời gian có dạng hiển thị HH:MM:SS
		giá trị của TIMESTAMP được chuyển đổi từ múi giờ hiện tại sang UTC trong khi lưu trữ, và chuyển ngược trở lại từ UTC sang múi giờ hiện tại trong lúc lấy ra
		Một số hàm hay sử dụng để thao tác với thời gian như sau:
			CURDATE: Hàm CURDATE() trong MySQL trả về ngày hiện tại trong định dạng 'YYYY-MM-DD'.
			CURTIME: Hàm CURTIME() trong MySQL trả về thời gian hiện tại trong định dạng giá trị 'HH: MM: SS'.
			NOW: Hàm NOW() trong MySQL trả về datetime hiện tại trong định dạng 'YYYY-MM-DD HH:MM:SS'.
			DAYOFWEEK(date): Hàm này trả về ngày trong tuần của date truyền vào. Ví dụ DAYOFWEEK("2017-06-15") sẽ trả về giá trị là 5.
			DAYNAME(date): Trả về tên ngày trong tuần của date truyền vào. Ví dụ DAYNAME("2017-06-15") sẽ trả về giá trị là  "Thursday".
			DATE_FORMAT(date, format): Hàm này trả về định dạng của date theo format đã truyền vào. Ví dụ DATE_FORMAT("2018-06-15", "%Y") sẽ trả về giá trị là 2018.
		Một số ký hiệu cho format ngày tháng:
			%Y: Đại diện cho năm được biểu thị bằng 4 chữ số ví dụ như 2009, 2010 ...
			%y: Đại diện cho năm được biểu thị bằng 2 chữ số cuối của năm ví dụ như năm 2017 thì trở thành 17, 1017 cũng trở thành 17.
			%M: Đại diện cho tháng được biểu thị bằng tên tháng, ví dụ tháng 12 thì sẽ là December.
			%m: Đại diện cho tháng được biểu thị bằng số, ví dụ tháng một của năm thì sẽ là 01.
			%D: Đại diện cho thứ tự ngày của tháng. Ví dụ ngày 18 của tháng thì sẽ là 18th
			%d: Đại diện cho ngày của tháng. Ví dụ ngày 18 của tháng thì sẽ là 18.
			%H: Đại diện cho giờ được biểu thị qua các số từ 00 đến 23. Ví dụ 3 giờ chiều thì sẽ là 15.
			%h: Đại diện cho giờ được biểu thị qua các số từ 01 đến 12. Ví dụ 3 giờ chiều thì sẽ là 3.
			%i: Đại diện cho phút được biểu thị qua các số từ 00 đến 59. Ví dụ hai mươi ba phút sẽ là 23.
			%S và %s: Đại diện cho giây được biểu thị qua các số từ 00 đến 59. Ví dụ hai mươi hai giây thì sẽ là 22.

